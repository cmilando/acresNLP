xlab("P(high exposure)") +
#coord_cartesian(expand = F) +
theme_classic2() +
theme(strip.background = element_blank())
# Calculating heatmaps of joint probability
#
library(tidyverse)
library(ggpubr)
library(lemon)
#
total_population <- 1e6
get_pdiff <- function(P_low_income, P_high_exposure, P_joint) {
#
low_income_pop    <- total_population * P_low_income
high_income_pop   <- total_population - low_income_pop
#
high_exposure_pop <- total_population * P_high_exposure
low_exposure_pop  <- total_population * (1 - P_high_exposure)
#
double_covariate <- min(low_income_pop, high_exposure_pop) * P_joint
#
matched_high_exp_low_income <- double_covariate
# check 1
matched_low_exp_low_income  <- low_income_pop - double_covariate
if(matched_low_exp_low_income < 0) return(NA)
# check 2
matched_high_exposure_high_income <- high_exposure_pop - matched_high_exp_low_income
if(matched_high_exposure_high_income < 0) return(NA)
# check 3
matched_low_exposure_high_income <- high_income_pop - matched_high_exposure_high_income
if(matched_low_exposure_high_income < 0) return(NA)
# return
percentage_match = matched_high_exp_low_income / total_population
#
percentage_random = ((matched_high_exp_low_income * P_high_exposure) +
(matched_low_exp_low_income * P_high_exposure)) / total_population
# change the order here based on the interpretation
return(percentage_random - percentage_match)
}
P_low_income     <- 0.5
P_high_exposure  <- 0.5
P_joint          <- 0.5
get_pdiff(P_low_income, P_high_exposure, P_joint)
GRID_CELLS <- 10
inputs <- expand_grid(P_low_income = (0:10)/10,
P_high_exposure = (0:GRID_CELLS)/GRID_CELLS,
P_joint = (0:GRID_CELLS)/GRID_CELLS)
output <- sapply(1:nrow(inputs), function(i) get_pdiff(inputs$P_low_income[i],
inputs$P_high_exposure[i],
inputs$P_joint[i]))
final_df <- cbind(inputs, output)
custom_labeller <- function(variable, value) {
paste("P(low income) = ", value)
}
# plot for a slice
ggplot(final_df %>% filter(!(P_low_income %in% c(0, 1)))) +
geom_tile(aes(x = P_high_exposure,
y = P_joint,
fill = output)) +
facet_rep_wrap(~P_low_income, labeller = custom_labeller) +
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(x = P_low_income,xend = P_low_income,
y = 0, yend = 1), linetype = '41',
color = 'grey') +
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income,yend = P_low_income,
x = 0, xend = 1), linetype = '41',
color = 'grey') +
scale_fill_gradient2(name =
'After randomization,
the change in
P(high exposure &
low income)') +
ylab("P(high exposure & low income)") +
xlab("P(high exposure)") +
#coord_cartesian(expand = F) +
theme_classic2() +
theme(strip.background = element_blank())
# plot for a slice
ggplot(final_df %>% filter(!(P_low_income %in% c(0, 1)))) +
geom_tile(aes(x = P_high_exposure,
y = P_joint,
fill = output)) +
facet_rep_wrap(~P_low_income, labeller = custom_labeller) +
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(x = P_low_income,xend = P_low_income,
y = -Inf, yend = Inf), linetype = '41',
color = 'grey') +
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income,yend = P_low_income,
x = -Inf, xend = Inf), linetype = '41',
color = 'grey') +
scale_fill_gradient2(name =
'After randomization,
the change in
P(high exposure &
low income)') +
ylab("P(high exposure & low income)") +
xlab("P(high exposure)") +
#coord_cartesian(expand = F) +
theme_classic2() +
theme(strip.background = element_blank())
GRID_CELLS <- 20
inputs <- expand_grid(P_low_income = (0:10)/10,
P_high_exposure = (0:GRID_CELLS)/GRID_CELLS,
P_joint = (0:GRID_CELLS)/GRID_CELLS)
output <- sapply(1:nrow(inputs), function(i) get_pdiff(inputs$P_low_income[i],
inputs$P_high_exposure[i],
inputs$P_joint[i]))
final_df <- cbind(inputs, output)
custom_labeller <- function(variable, value) {
paste("P(low income) = ", value)
}
# plot for a slice
ggplot(final_df %>% filter(!(P_low_income %in% c(0, 1)))) +
geom_tile(aes(x = P_high_exposure,
y = P_joint,
fill = output)) +
facet_rep_wrap(~P_low_income, labeller = custom_labeller) +
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(x = P_low_income,xend = P_low_income,
y = -Inf, yend = Inf), linetype = '41',
color = 'grey') +
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income,yend = P_low_income,
x = -Inf, xend = Inf), linetype = '41',
color = 'grey') +
scale_fill_gradient2(name =
'After randomization,
the change in
P(high exposure &
low income)') +
ylab("P(high exposure & low income)") +
xlab("P(high exposure)") +
#coord_cartesian(expand = F) +
theme_classic2() +
theme(strip.background = element_blank())
# plot for a slice
ggplot(final_df %>% filter(!(P_low_income %in% c(0, 1)))) +
geom_tile(aes(x = P_high_exposure,
y = P_joint,
fill = output)) +
facet_rep_wrap(~P_low_income, labeller = custom_labeller) +
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(x = P_low_income,xend = P_low_income,
y = -Inf, yend = Inf), linetype = '41',
color = 'grey') +
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income,yend = P_low_income,
x = -Inf, xend = Inf), linetype = '41',
color = 'grey') +
scale_fill_gradient2(name =
'After randomization,
the change in
P(high exposure &
low income)', low = '#2C7BB6', high = '#D7191C') +
ylab("P(high exposure & low income)") +
xlab("P(high exposure)") +
#coord_cartesian(expand = F) +
theme_classic2() +
theme(strip.background = element_blank())
# plot for a slice
ggplot(final_df %>% filter(!(P_low_income %in% c(0, 1)))) +
geom_tile(aes(x = P_high_exposure,
y = P_joint,
fill = output)) +
facet_rep_wrap(~P_low_income, labeller = custom_labeller) +
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(x = P_low_income,xend = P_low_income,
y = -Inf, yend = Inf), linetype = '41',
color = 'grey') +
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income,yend = P_low_income,
x = -Inf, xend = Inf), linetype = '41',
color = 'grey') +
scale_fill_gradient2(name =
'After randomization,
the change in
P(high exposure &
low income)', low = muted("blue"), high = muted("red")) +
ylab("P(high exposure & low income)") +
xlab("P(high exposure)") +
#coord_cartesian(expand = F) +
theme_classic2() +
theme(strip.background = element_blank())
library(scales)
# plot for a slice
ggplot(final_df %>% filter(!(P_low_income %in% c(0, 1)))) +
geom_tile(aes(x = P_high_exposure,
y = P_joint,
fill = output)) +
facet_rep_wrap(~P_low_income, labeller = custom_labeller) +
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(x = P_low_income,xend = P_low_income,
y = -Inf, yend = Inf), linetype = '41',
color = 'grey') +
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income,yend = P_low_income,
x = -Inf, xend = Inf), linetype = '41',
color = 'grey') +
scale_fill_gradient2(name =
'After randomization,
the change in
P(high exposure &
low income)', low = muted("blue"), high = muted("red")) +
ylab("P(high exposure & low income)") +
xlab("P(high exposure)") +
#coord_cartesian(expand = F) +
theme_classic2() +
theme(strip.background = element_blank())
# plot for a slice
ggplot(final_df %>% filter(!(P_low_income %in% c(0, 1)))) +
geom_tile(aes(x = P_high_exposure,
y = P_joint,
fill = output)) +
facet_rep_wrap(~P_low_income, labeller = custom_labeller) +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(x = P_low_income,xend = P_low_income,
y = -Inf, yend = Inf), linetype = '41',
color = 'grey') +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income,yend = P_low_income,
x = -Inf, xend = Inf), linetype = '41',
color = 'grey') +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_high_exposure,yend = 1,
x = P_high_exposure, xend = 1), linetype = '41',
color = 'grey') +
#
scale_fill_gradient2(name =
'After randomization,
the change in
P(high exposure &
low income)', low = muted("blue"), high = muted("red")) +
ylab("P(high exposure & low income)") +
xlab("P(high exposure)") +
#coord_cartesian(expand = F) +
theme_classic2() +
theme(strip.background = element_blank())
# plot for a slice
ggplot(final_df %>% filter(!(P_low_income %in% c(0, 1)))) +
geom_tile(aes(x = P_high_exposure,
y = P_joint,
fill = output)) +
facet_rep_wrap(~P_low_income, labeller = custom_labeller) +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(x = P_low_income,xend = P_low_income,
y = -Inf, yend = Inf), linetype = '41',
color = 'grey') +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income,yend = P_low_income,
x = -Inf, xend = Inf), linetype = '41',
color = 'grey') +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income, yend = 1,
x = P_low_income, xend = 1), linetype = '41',
color = 'grey') +
#
scale_fill_gradient2(name =
'After randomization,
the change in
P(high exposure &
low income)', low = muted("blue"), high = muted("red")) +
ylab("P(high exposure & low income)") +
xlab("P(high exposure)") +
#coord_cartesian(expand = F) +
theme_classic2() +
theme(strip.background = element_blank())
# plot for a slice
ggplot(final_df %>% filter(!(P_low_income %in% c(0, 1)))) +
geom_tile(aes(x = P_high_exposure,
y = P_joint,
fill = output)) +
facet_rep_wrap(~P_low_income, labeller = custom_labeller) +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(x = P_low_income,xend = P_low_income,
y = -Inf, yend = Inf), linetype = '41',
color = 'grey') +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income,yend = P_low_income,
x = -Inf, xend = Inf), linetype = '41',
color = 'grey') +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income, yend = 1,
x = P_low_income, xend = 1),
linetype = '11',
color = 'grey') +
#
scale_fill_gradient2(name =
'After randomization,
the change in
P(high exposure &
low income)', low = muted("blue"), high = muted("red")) +
ylab("P(high exposure & low income)") +
xlab("P(high exposure)") +
#coord_cartesian(expand = F) +
theme_classic2() +
theme(strip.background = element_blank())
# plot for a slice
ggplot(final_df %>% filter(!(P_low_income %in% c(0, 1)))) +
geom_tile(aes(x = P_high_exposure,
y = P_joint,
fill = output)) +
facet_rep_wrap(~P_low_income, labeller = custom_labeller) +
#
# geom_segment(data = final_df %>%
#                filter(!(P_low_income %in% c(0, 1))) %>%
#                distinct(P_low_income, P_high_exposure),
#                mapping = aes(x = P_low_income,xend = P_low_income,
#                y = -Inf, yend = Inf), linetype = '41',
#              color = 'grey') +
# #
# geom_segment(data = final_df %>%
#                filter(!(P_low_income %in% c(0, 1))) %>%
#                distinct(P_low_income, P_high_exposure),
#              mapping = aes(y = P_low_income,yend = P_low_income,
#                            x = -Inf, xend = Inf), linetype = '41',
#              color = 'grey') +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income, yend = 1,
x = P_low_income, xend = 1),
linetype = '11',
color = 'grey') +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income, yend = P_low_income,
x = -Inf, xend = P_low_income),
linetype = '11',
color = 'grey') +
#
scale_fill_gradient2(name =
'After randomization,
the change in
P(high exposure &
low income)', low = muted("blue"), high = muted("red")) +
ylab("P(high exposure & low income)") +
xlab("P(high exposure)") +
#coord_cartesian(expand = F) +
theme_classic2() +
theme(strip.background = element_blank())
GRID_CELLS <- 50
inputs <- expand_grid(P_low_income = (0:10)/10,
P_high_exposure = (0:GRID_CELLS)/GRID_CELLS,
P_joint = (0:GRID_CELLS)/GRID_CELLS)
output <- sapply(1:nrow(inputs), function(i) get_pdiff(inputs$P_low_income[i],
inputs$P_high_exposure[i],
inputs$P_joint[i]))
final_df <- cbind(inputs, output)
custom_labeller <- function(variable, value) {
paste("P(low income) = ", value)
}
# plot for a slice
ggplot(final_df %>% filter(!(P_low_income %in% c(0, 1)))) +
geom_tile(aes(x = P_high_exposure,
y = P_joint,
fill = output)) +
facet_rep_wrap(~P_low_income, labeller = custom_labeller) +
#
# geom_segment(data = final_df %>%
#                filter(!(P_low_income %in% c(0, 1))) %>%
#                distinct(P_low_income, P_high_exposure),
#                mapping = aes(x = P_low_income,xend = P_low_income,
#                y = -Inf, yend = Inf), linetype = '41',
#              color = 'grey') +
# #
# geom_segment(data = final_df %>%
#                filter(!(P_low_income %in% c(0, 1))) %>%
#                distinct(P_low_income, P_high_exposure),
#              mapping = aes(y = P_low_income,yend = P_low_income,
#                            x = -Inf, xend = Inf), linetype = '41',
#              color = 'grey') +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income, yend = 1,
x = P_low_income, xend = 1),
linetype = '11',
color = 'grey') +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income, yend = P_low_income,
x = -Inf, xend = P_low_income),
linetype = '11',
color = 'grey') +
#
scale_fill_gradient2(name =
'After randomization,
the change in
P(high exposure &
low income)', low = muted("blue"), high = muted("red")) +
ylab("P(high exposure & low income)") +
xlab("P(high exposure)") +
#coord_cartesian(expand = F) +
theme_classic2() +
theme(strip.background = element_blank())
GRID_CELLS <- 20
inputs <- expand_grid(P_low_income = (0:10)/10,
P_high_exposure = (0:GRID_CELLS)/GRID_CELLS,
P_joint = (0:GRID_CELLS)/GRID_CELLS)
output <- sapply(1:nrow(inputs), function(i) get_pdiff(inputs$P_low_income[i],
inputs$P_high_exposure[i],
inputs$P_joint[i]))
final_df <- cbind(inputs, output)
custom_labeller <- function(variable, value) {
paste("P(low income) = ", value)
}
# plot for a slice
ggplot(final_df %>% filter(!(P_low_income %in% c(0, 1)))) +
geom_tile(aes(x = P_high_exposure,
y = P_joint,
fill = output)) +
facet_rep_wrap(~P_low_income, labeller = custom_labeller) +
#
# geom_segment(data = final_df %>%
#                filter(!(P_low_income %in% c(0, 1))) %>%
#                distinct(P_low_income, P_high_exposure),
#                mapping = aes(x = P_low_income,xend = P_low_income,
#                y = -Inf, yend = Inf), linetype = '41',
#              color = 'grey') +
# #
# geom_segment(data = final_df %>%
#                filter(!(P_low_income %in% c(0, 1))) %>%
#                distinct(P_low_income, P_high_exposure),
#              mapping = aes(y = P_low_income,yend = P_low_income,
#                            x = -Inf, xend = Inf), linetype = '41',
#              color = 'grey') +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income, yend = 1,
x = P_low_income, xend = 1),
linetype = '11',
color = 'grey') +
#
geom_segment(data = final_df %>%
filter(!(P_low_income %in% c(0, 1))) %>%
distinct(P_low_income, P_high_exposure),
mapping = aes(y = P_low_income, yend = P_low_income,
x = -Inf, xend = P_low_income),
linetype = '11',
color = 'grey') +
#
scale_fill_gradient2(name =
'After randomization,
the change in
P(high exposure &
low income)', low = muted("blue"), high = muted("red")) +
ylab("P(high exposure & low income)") +
xlab("P(high exposure)") +
#coord_cartesian(expand = F) +
theme_classic2() +
theme(strip.background = element_blank())
